spring.application.name=springSecurity
#spring.security.user.name=mohan
#spring.security.user.password=2623
server.port=8080
server.servlet.session.cookie.same-site=strict

# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/bookshelf
spring.datasource.username=postgres
spring.datasource.password=2623
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

# OAuth2 Configuration - Google
spring.security.oauth2.client.registration.google.client-id=529996464955-dm9m8nq6gqomlcufa20e17auj2jbi3d8.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email

# OAuth2 Configuration - GitHub
spring.security.oauth2.client.registration.github.client-id=Ov23liSsL2WalRvx8s62
spring.security.oauth2.client.registration.github.client-secret=8a23ec3300bb98ced61ed8926456da3337958e36
spring.security.oauth2.client.registration.github.scope=user:email

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# JWT Configuration
# IMPORTANT: Generate a secure random key for production (at least 256 bits / 32 bytes)
# Use: openssl rand -base64 32
jwt.secret=change-me-please-32-bytes-minimum-secret-key-123456
# Token expiration: 30 minutes (in milliseconds)
jwt.expiration=1800000
# Refresh token expiration: 7 days (in milliseconds)
jwt.refresh-expiration=604800000

# Server Configuration
server.error.include-message=always
server.error.include-binding-errors=always

app.frontend.url=http://localhost:5173
