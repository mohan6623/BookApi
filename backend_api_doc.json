{
  "apiName": "Book Forem Backend API",
  "description": "Spring Boot backend with JWT authentication. All endpoints except /register and /login require JWT in the Authorization header.",
  "baseUrl": "http://localhost:8080/",
  "authentication": {
    "type": "JWT",
    "header": "Authorization: Bearer <token>",
    "loginEndpoint": "/login"
  },
  "endpoints": [
    {
      "path": "/register",
      "method": "POST",
      "public": true,
      "description": "Register a new user.",
      "requestBody": {
        "username": "string",
        "password": "string"
      },
      "response": {
        "201": "User registered successfully.",
        "400": "Validation error."
      }
    },
    {
      "path": "/login",
      "method": "POST",
      "public": true,
      "description": "Authenticate user and receive JWT token.",
      "requestBody": {
        "username": "string",
        "password": "string"
      },
      "response": {
        "200": {
          "token": "jwt-token-string"
        },
        "401": "Unauthorized."
      }
    },
    {
      "path": "/*",
      "method": "ANY",
      "public": false,
      "description": "All other endpoints require JWT authentication.",
      "headers": {
        "Authorization": "Bearer <jwt-token>"
      },
      "response": {
        "401": "Unauthorized."
      }
    }
  ],
  "cors": {
    "enabled": true,
    "note": "OPTIONS requests are permitted for CORS preflight."
  },
  "security": {
    "passwordStorage": "BCrypt hash",
    "session": "Stateless (no server-side session)"
  },
  "examples": {
    "register": {
      "curl": "curl -X POST http://localhost:8080/register -H 'Content-Type: application/json' -d '{\"username\":\"user1\",\"password\":\"pass123\"}'"
    },
    "login": {
      "curl": "curl -X POST http://localhost:8080/login -H 'Content-Type: application/json' -d '{\"username\":\"user1\",\"password\":\"pass123\"}'"
    },
    "protected": {
      "curl": "curl -X GET http://localhost:8080/protected-endpoint -H 'Authorization: Bearer <jwt-token>'"
    }
  },
  "notes": [
    "Replace <jwt-token> with the token received from /login.",
    "Only /register and /login are public; all other endpoints require authentication."
  ]
}

